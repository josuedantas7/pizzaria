// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?    @unique
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  accounts       Account[]
  role           String?    @default("user")
  Product        Product[]
  Category       Category[]
}

model Product {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  categoryId   String         @db.ObjectId
  ownerId      String         @db.ObjectId
  name         String
  price        Float
  description  String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  owner        User           @relation(fields: [ownerId], references: [id])
  Category     Category       @relation(fields: [categoryId], references: [id])
  OrderProduct OrderProduct[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  ownerId   String    @db.ObjectId
  owner     User      @relation(fields: [ownerId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Table {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId   String   @db.ObjectId
  idTable   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order?
}

model Order {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ownerId      String         @db.ObjectId
  OrderProduct OrderProduct[]
  Table        Table?         @relation(fields: [tableId], references: [id])
  tableId      String?        @unique @db.ObjectId
}

model OrderProduct {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
